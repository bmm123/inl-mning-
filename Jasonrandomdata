import json
import random
from datetime import datetime
from azure.storage.queue import QueueServiceClient
import time

# Din Connection String från Azure Storage Account
connection_str = "DefaultEndpointsProtocol=https;AccountName=omarde23;AccountKey=HQz25YR/8a4AwiMMdaC5nh24IVnZmnboglcEQUglCnVTHA9MeCLaQUdjEagdLRujr7fP9kqHbQjD+AStNIJmkg==;EndpointSuffix=core.windows.net"
queue_name = "omarmk"  # Namnet på din queue

# Anslutning till Azure Queue
queue_service = QueueServiceClient.from_connection_string(connection_str)
queue_client = queue_service.get_queue_client(queue_name)

# Kontrollera om kön existerar genom att försöka hämta dess egenskaper
def check_if_queue_exists(queue_client):
    try:
        queue_client.get_queue_properties()  # Försök att hämta köns egenskaper
        print(f"Kön '{queue_name}' existerar. Skickar meddelanden...")
        return True
    except Exception as e:
        print(f"Kön '{queue_name}' existerar inte eller kunde inte nås. Fel: {str(e)}")
        return False

def produce_data(max_messages=10):
    try:
        for _ in range(max_messages):
            # Generera slumpmässig data
            data = {
                "id": random.randint(1, 1000000),  # Större slumpmässigt ID-intervall
                "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
                "value": random.uniform(10, 100),  # Slumpmässigt värde
                "status": random.choice(["active", "inactive", "pending"]),  # Lägg till en slumpmässig status
                "description": "This is a sample message"  # En enkel beskrivning för varje meddelande
            }
            # Konvertera till JSON-format
            message = json.dumps(data)
            print(f"Sending message: {message}")
            # Skicka meddelandet till kön
            queue_client.send_message(message)
            # Pausa 2 sekunder mellan varje meddelande för att undvika överbelastning
            time.sleep(2)
            
    except Exception as e:
        print(f"Fel vid försök att skicka meddelandet: {str(e)}")

# Kontrollera om kön existerar och anropa funktionen om den finns
if check_if_queue_exists(queue_client):
    produce_data(max_messages=35)
